'''
我现在在聊天项目中给学生讲解实时更新好友列表，讲解步骤是这样的：
新用户登录服务端和客户端操作：
1. 新用户登录后服务端会将登录用户用户名头像信息发送给其他用户
2.其他客户端从服务端收到新用户登录消息，并将好友信息显示到好友列表中
问题：在哪个界面接收服务端发送来的新好友登录信息？
解答：因为好友列表显示在聊天界面，所以接收新好友登录消息应该在聊天界面完成
因为随时可能有好友登录，所以进入聊天界面后，随时都有可能接收到服务端发送的好友登录消息，所以是无法预知收到消息的时间的，
所以要在进入聊天界面后客户端也同样可以使用死循环，随时准备接收服务端消息
实现步骤： 1.ChatWindow类中增加一个getMsg方法；2.方法中while True 循环调用recvMsg接收服务端消息，并打印；
3.在__init__ 方法中调用getMsg方法，保证打开聊天界面就可以随时接收服务端的好友登录消息
但是增加死循环后发现登录完却反而连聊天界面都没有了，原因是因为用户登录成功后，创建聊天界面，就执行ChatWindow.py中
的getMsg方法进入死循环中，不断等待接收服务端消息，没有退出循环，导致loginwindow.py中chatwindow.show()无法执行，
也就无法显示聊天界面。
问题：一方面需要结束死循环才能执行show方法，另一方面要随时准备接收服务端发来的新人登录消息，循环不能结束怎么办
解决：使用一个独立的线程循环等待接收服务端消息，不影响程序继续执行show显示聊天窗口1. 将循环接收消息的函数getMsg作为线
程函数；2. 在__init__中不直接调用getMsg，而是使用Thread创建线程放入getMsg函数；3. 执行start方法启动线程
接下来讲聊天窗口更新好友列表：分析得出客户端会收到服务端发送的3类消息，登录，聊天，退出。
我们这里收到登录消息结构是：
cmd : login 表示这是服务端转发的新用户登录的信息，content: '02.png'  这是新登录的好友头像；
sender : ‘童童’ 这是新登录个好友的用户名；to : None  因为用户登录信息时转发个所有人，所以to暂时是None
所以我们可以判断当消息类型是新用户登录时分三步完成更新好友列表：
1. 提取获取到的用户信息：用户名，头像；2.生成新的包含用户图标和用户名列表项；3.将列表项添加到列表控件中

接下来讲服务端部分将新登录用户信息群发送给其他客户端。因为，只有登录成功才发消息给其他用户，所以，群发新用户登录消息给其他用户，
应该在服务端login方法内部，告知登录的用户登录成功之后完成。分析发现要发送给其他客户端的消息和登录用户发给服务端的请求消息一样，
所以服务端只要转发就可以了。因为要将发送给服务端用户列表中所有人，只需取出每个客户端socket，调用方法发送即可

我的客户端核心代码是：
def getMsg(self):
    while True:
        res = self.client.recvMsg()
        print('聊天窗口收到消息：',res)
        # 1. 获取聊天窗口收到消息
        msg = res['msg']
       # 2. 如果类型命令是登录信息，就获取新用户的账号和头像，调用addfriend方法
       if msg['cmd'] == 'login':
            avatar = msg['content']
            name = msg['sender']
            # 调用列表添加用户的函数
            item = QListWidgetItem(QIcon('../images/avatar' + avatar), name)
            fdList.insertItem(0, item)


服务端核心代码是：
def login(self, connSocket, req):
   ...
   # 1. 给其他登录的用户发送该用户登录成功的信息
   for cSocket in Server.clients.values():
         self.sendMsg(cSocket, req, 200)

   ...
请根据以上内容帮我使用中文，根据以上知识点出5道单选题，主要考察：客户端可能接收到服务端的消息类型，
客户端如何避免循环接收造成界面无法显示，客户端收到服务端消息的内容含义，如何创建线程循环接收服务端消息，
服务端如何将新用户登录信息告知其他客户端等，不需要答案.

'''
