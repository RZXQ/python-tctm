'''

我在给6年级的孩子讲解网络聊天程序中服务端收到客户端登录信息后的处理。之前已经讲解了服务端收到登录请求消息
给客户端回复一个响应，在此基础上继续讲解，讲解步骤是这样的：
问题： 服务端需要保存所有登录的用户名和对应的连接，以便后续转发客户端消息，但是需要保存用户哪些信息
解答 ：用户名字作为查找用户的唯一标识，每个用户的客户端连接socket，还有用户头像
问题：定义什么结构数据保存这些信息
解答 ： 讨论可以用类或字典，我们最后选择使用字典，AI工具推荐的字典结构是 {用户名：{socket:连接socket，
avatar:用户头像}},但是因为将来所有的登录用户信息发送给其他客户端，用于显示好友列表，但是我们只发送用户名
和头像就可以了，没必要发送连接socket。所以为了便于后续操作我们选择用2个字典存储用户信息：
字典1{用户名：客户端套接字}——用来查找用户客户端对应连接对象；字典2{用户名：头像图片}用来查找用户头像，
提取客户端登录消息中设置的头像名保存
问题： 如何将客户端发到服务端的登录信息保存到字典中
解决： 分为3步 1. Server类初始化函数中创建2个空字典保存客户端发来的登录信息；2. 因为两个字典中查找用户信
息都要用用户名，所以先从接收到的req中提取登录用户的用户名sender；3.  在向两个字典分别增加键值对
问题:将来服务端有可能收到登录消息，也有可能收到聊天消息
解决:增加if判断，如果cmd是‘login’才执行登录的步骤，并返回登录结果，否则就执行查找收件人信息转发聊天消息
问题：所有功能都写在一个handle方法中代码太长，看起来乱
解决：所以我们将if elif中的登录和转发功能各自封装为一个方法，但是因为我们现在只实现的保存用户信息，
返回登录
结果的代码，所以今天我们只封装login函数。转发功能后续再封装
问题： 一个账号已经登录，却还可以在另一台计算机上登录
解决： 当判断用户已经处于登录状态，则不允许再登录
问题： 如何判断一个用户是否已经是登录状态？
解决： 因为服务端Users字典中保存了所有登录用户信息，所以在服务端收到用户登录消息时，就可以去users字典
中查找是否已经包含用户信息

这是我的服务端代码：
def handle(self, connSocket):
    while True:
        req = self.recvMsg(connSocket)
        print('接收到的消息：', req)
        if not req:
            break
        # 2. 判断消息命令是否为登录命令，如果是，调用login方法
        elif req['cmd'] == 'login':
            self.login(connSocket, req)
    connSocket.close()

def login(self, connSocket, req):
    sender = req['sender']
    # 1. 验证该账号是否已经登录
    if self.connSockets[sender]:
        msg = Message('login', '该账号已登录', '服务器')
        self.sendMsg(connSocket, msg, 401)
        return
    self.connSockets[sender] = connSocket
    self.avatars[sender] = req['content']
    print(self.connSockets)
    print(self.avatars)
    msg = Message(req['cmd'], req[sender]+'登录成功', '服务器')
    self.sendMsg(connSocket, msg, 200)

请根据以上内容帮我使用中文，根据以上知识点出5道单选题，主要考察：服务端接收登录消息后都需要做哪些处理，
服务端如何避免重复登录，如何区分登录消息还是聊天消息，服务端保存用户哪些信息，保存方法，服务端如何告知
客户端是否登录成功等知识，不需要答案.

'''
