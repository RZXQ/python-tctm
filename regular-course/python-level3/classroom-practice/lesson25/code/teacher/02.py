'''
在pyqt项目中需要通过自定义事件将子线程收到的服务端消息传递给主程序使用，讲解步骤是这样的：
问题： 为什么切换好友查看聊天消息时，有的好友可以，有的好友却弹出一个新的小窗口，看起来很奇怪
观察发现，如果好友是在我们登录之前登录的就没有问题，但是如果是在我们登录后新增的好友，选择时就会出现新的小窗口
显示聊天信息
问题： 这两种好友有什么区别呢
解决：第一种，登录时已经存在的好友是登录时通过服务端接收过来，ChatWindow类中的setUi中为这些好友创建的消息列表
控件的，这部分代码是在主程序中执行的；第二种，登录后在getMsg分支线程中收到好友登录的消息，然后再分支线程中为登
录好友创建的消息列表控件。在pyqt中规定，子线程中创建的控件，不允许添加到主程序中的窗口中，pyqt会默认起一个小窗
口显示控件。要想再主程序窗口中添加控件，那么控件也必须在主程序中创建。
问题：因为只有在子线程中接收到好友登录消息，才需要添加好友为好友创建消息列表控件：1.循环接收消息必须要在子线程
中完成，2. 创建消息列表控件又必须在主程序中去做。
那么如何才能变为，子线程遥控主程序创建控件呢？
引出使用： 自定义事件 signal; 然后通过遥控车类比这就像一个信号发射器和一个接收器，发射信号，接收端就会有行动，
程序中也是一样的，包含两部分，一部分是信号接收端，一部分是信号发送端。子线程接收消息，遥控主程序创建控件。
步骤： 先在主程序ChatWindow类中定义信号接收器，准备接收信号 signal = pyqtSignal()。要用变量，将信号发送器接
收保存起来，后续才能发送信号
注意：PYQT规定，创建的信号必须要定义为类变量，但是使用时却还是与点击事件等其他信号事件一样，必须使用self调用
问题：服务端收到信号后做什么？
解决：一般情况下都要给信号接收器绑定一个处理函数handle: self.signal.connect(self.handle)
问题：在子线程中如何发送信号？
解决：self.signal.emit()  在聊天程序中，收到服务端发来的好友登录退出消息时需要向主程序发送信号，遥控主程序，
所以应该放在getMsg while True中，在主程序中创建消息列表控件，这样才能顺利添加到主窗口显示，所以将原本子线程
中完成任务的整个if分支语句全都放到handle方法中。
问题： handle需要形参怎么从子进程中传递
解决： 分3步实现  1. 在定义信号接收器时，要提前指定数据类型·；2. 处理函数定义形参，准备接收数据，注意形参名与
剪切过来的代码保持一致，都叫msg；3. 发送信号时，传入要发送的数据 msg。发送的数据类型必须和定义接收器时指定的类
型一致

我的这部分的核心代码：
class ChatWindow(QWidget):
    # 1. 自定义事件
    signal = pyqtSignal(dict)
    def __init__(self, sender, client, avatars):
        super().__init__()
        # 2. 绑定事件处理函数
        self.signal.connect(self.handle)
       ...

    def getMsg(self):
        while True:
            ...
            # 4. 触发事件
            self.signal.emit(msg)

    # 3. 事件处理函数
    def handle(self，msg):
        # 1 将getMsg中if分支语句整个剪切过来
        if msg['cmd'] == 'login':
           ...
        elif msg['cmd'] == 'quit':
            ...

请根据以上内容帮我使用中文，根据以上知识点出5道单选题，主要考察：为什么不能在子线程中定义列表控件，如何
自定义signal事件，定义事件如何绑定执行函数，从子线程中传递数值给主程序中事件函数步骤，对于自定义事件知
识点的理解等，不需要答案.

'''
