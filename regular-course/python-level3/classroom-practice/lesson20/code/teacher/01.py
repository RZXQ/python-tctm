'''

我先在要给6年级的孩子讲解python线程知识，我的讲解逻辑是这样的：
问题：在socket编程中，一个客户端不退出，另一个客户端就无法连接，如何解决
解决 ： 如果可以把耗时的内层循环，从主程序中提取出来，单独运行，不要阻碍外部循环反复执行accept，
就可以让更多的客户端连接到服务器，可以使用线程技术解决问题
问题： 什么是线程
解决 ：一个程序中包含多个任务，原本顺序执行，比如文件读写，收发消息，绘制图片。
如果我们不希望其中一个耗时的任务阻碍后续任务执行，将这个耗时任务取出独立运行，这个可以独立运行的任务称为线程
这里我用家庭大扫除为例：大扫除时，需要扫地，擦桌子，洗衣服，做饭...... 如果妈妈自己做就只能一件一件做，
需要很长时间才能做完。但是妈妈给我和爸爸都分配任务，我擦桌子、扫地，爸爸洗衣服。我们三个人一起做家务，
很快就能做完。程序中线程的作用也是这样的 ，将原程序中顺序执行的多个任务，分别放入多个线程，独立运行互不影响，
还提高了效率，就称为多线程编程，其实，多线程在生活中运用非常广泛。尤其在你们玩儿的游戏中，你可以一边玩儿游戏，
一边播放音乐，一边在游戏中和朋友们语音聊天。所以如果希望一个耗时的任务执行过程中，主程序依然可以运行，就需要使用多线程
然后我开始讲解程序中如何创建线程：第一步 ： 创建函数，包含任务代码  第二部： 创建线程对象，
指定任务函数threading.Thread(target=func)  第三步：调用start启动线程 t.start()
然后讲解线程函数传参，threading.Thread(target=func, args=[,,,,] )

这是我的代码：
import threading
import time
def father(task):
    for i in range(5):
        print('爸爸正在做%s' % task)
        time.sleep(1)
t1 = threading.Thread(target=father, args=['扫地'])
t1.start()
def son(task):
    for i in range(5):
        print('儿子正在做%s' % task)
        time.sleep(1)
t2 = threading.Thread(target=son, args=['擦桌子'])
t2.start()
print('主线程结束')

请根据以上内容帮我使用中文，根据以上知识点出5道单选题，帮助6年级学生掌握这部分知识，包括线程的定义，线程使用场景，threading模块中常用函数的用法，创建线程步骤，线程函数传参等，不需要答案.

'''
